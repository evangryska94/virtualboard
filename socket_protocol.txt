//initialization

//==========
//client to server (pre-game)
//==========
//TODO: maybe there is a general chat for people not yet in a lobby

{
	"type" : "initJoin",
	"data" : {
		"name" : "fred",
		"color" : [
			0,
			255,
			0
		],
		"gameID" : 2,
		"password" : "12345"
	}
}

{
	"type" : "initHost",
	"data" : {
		"name" : "sam",
		"color" : [
			255,
			0,
			0
		],
		"gameName" : "coolville",
		"password" : "12345"
	}
}

{
	"type" : "listGames",
}

{
	"type" : "ping",

	//data can be literally anything
	"data" : {
		"msg" : "sequence number or something"
	}
}

//==========
//server to client (pre-game)
//==========

{
	"type" : "initSuccess",
	"data" : {
		"gameName" : "coolville",
		"users" : [
			{
				"id" : 0,
				"name" : "sam",
				"color" : [
					255,
					0,
					0
				],
				"host" : 1,
				"local" : 0
			},
			{
				"id" : 3,
				"name": "fred",
				"color" : [
					0,
					255,
					0
				],
				"host" : 0,
				"local" : 1
			}
		],
		"board" : {
			//note: piece array is ordered with bottom element first, and top element last
			"pieces" : [
				{
					"name" : "somepiece",
					"pos" : [
						5.734,
						3.64
					],
					"id" : 5,
					"icon" : "static/img/crown.png",
					"color" : [
						255,
						0,
						0
					],
					"static" : 0
				}
			]
		}
	}
}

{
	"type" : "initFailure",
	"data" : {
		"msg" : "wrong password"
	}
}

{
	"type" : "listGames",
	"data" : [
		{
			"id" : 2,
			"name" : "coolville",
			"players" : 1,
			"password" : 1
		}
	]
}

{
	"type" : "pong",
	"data" : [
		//data can be literally anything
		{
			"seq" : 5235
		}
	]
}

{
	"type" : "error",
	"data" : [
		{
			"msg" : "bad input"
		}
	]
}

//TODO: retexturing?

//==========
//server to client protocol
//==========

{
	"type" : "chat",
	"data" : [
		{
			"user" : 1,
			"time" : 802983477.643, //seconds since epoc
			"msg" : "actual text here"
		},
		{
			"user" : 2,
			"time" : 802983477.648,
			"msg" : "more actual text here"
		}
	]
}

//pinging the board at a position to notify other users
//maybe we add different kinds of pings in the future (!, ?, X, etc)
{
	"type" : "beacon",
	"data" : [
		{
			"user" : 1,
			"pos" : [
				54.352,
				65.454
			]
		}
	]
}

{
	"type" : "pieceTransform",
	"data" : [
		{
			"piece" : 3,
			"user" : 4,

			//optional parameters
			"color" : [
				255,
				255,
				255
			],
			"pos" : [
				6.98721345,
				90.6532
			],
			"r" : 0.45656,
			"s" : 1.0
		}
	]
}

{
	"type" : "pieceAdd",
	"data" : [
		{
			"piece" : 6,
			"user" : 4,
			//"name" : "my piece",
			"icon" : "/res/img.png",
			"color" : [
				255,
				255,
				255
			],
			"pos" : [
				6.6435,
				65.2543
			],
			"r" : 0.45656,
			"s" : 1.0
		}
	]
}

{
	"type" : "pieceRemove",
	"data" : [
		{
			"piece" : 6,
			"user" : 4
		}
	]
}

{
	"type" : "clearBoard"
}

{
	"type" : "userConnect",
	"data" : [
		{
			"user" : 5,
			"name" : "phil",
			"color" : [
				255,
				0,
				0
			]
		}
	]
}

{
	"type" : "userDisconnect",
	"data" : [
		{
			"user" : 5,
			"msg" : "lost connection"
		}
	]
}

//this one doesn't use array format since only last one matters
{
	"type" : "changeHost",
	"data" : {
		"user" : 2,
		"msg" : "previous host disconnected"
	}
}

{
	"type" : "announcement",
	"data" : [
		{
			"msg" : "words go here"
		}
	]
}

//TODO: private zones
{
	"type" : "createPrivateZone",
	"data" : [
		{
			"id" : 8,
			"user" : 4,
			"color" : [
				255,
				0,
				0
			],
			"pos" : [
				1.045,
				-8.53
			],
			"size" : [
				7,
				2
			],
			"r" : 3.14159265
		}
	]
}

{
	"type" : "transformPrivateZone",
	"data" : [
		{
			"user" : 4,
			"id" : 8,

			//optional parameters
			"color" : [
				255,
				0,
				0
			],
			"pos" : [
				1.045,
				-8.53
			],
			"size" : [
				7,
				2
			],
			"r" : 3.14159265
		}
	]
}

{
	"type" : "drawScribble",
	"data" : [
		{
			"user" : 4,
			"ttl" : 10,
			"points" : [
				[
					-6.573456,
					1.54352
				],
				[
					-6.4652,
					1.462453
				],
				[
					-6.4642,
					1.41877
				]
			]
		}
	]
}

{
	"type" : "listClients",
	"data" : [
		{
			"id" : 0,
			"name" : "sam",
			"host" : 1,
			"local" : 0
		},
		{
			"id" : 3,
			"name": "fred",
			"host" : 0,
			"local" : 1
		}
	]
}

//==========
//client to server protocol
//==========

{
	"type" : "chat",
	"data" : [
		{
			"msg" : "actual text here"
		}
	]
}

{
	"type" : "beacon",
	"data" : [
		{
			"pos" : [	
				54.5435,
				0.534
			]
		}
	]
}

{
	"type" : "pieceTransform",
	"data" :  [
		{
			"piece" : 3,

			//optional parameters
			"pos" : [
				6.98721345,
				90.6532
			],
			"r" : 0.45656,
			"s" : 1.0
		}
	]
}

//TODO: piece pickup/drop?
//alternatively we can just have clients infer pickup/drop based on piece movement
//and have some timeout for the highlight to go away

{
	"type" : "pieceAdd",
	"data" : [
		{
			"piece" : 6,
			"name" : "my piece",
			"url" : "/res/img.png",
			"pos" : [
				6.6435,
				65.2543
			],
			"r" : 0.45656,
			"s" : 1.0
		}
	]
}

{
	"type" : "pieceRemove",
	"data" : [
		{
			"piece" : 6,
		}
	]
}

//scribbles will not be saved by the server and exist only temporarily.
//we can add support for having scribbles stay indefinitely (ttl of -1)
//but if someone new joins they will not see previous scribbles
{
	"type" : "drawScribble",
	"data" : [
		{
			"ttl" : 10,
			"points" : [
				//first index is x, second is y
				//this seems better than { "x" : 5.364, "y" : 77.76}
				[
					-6.573456,
					1.54352
				],
				[
					-6.4652,
					1.462453
				],
				[
					-6.4642,
					1.41877
				]
			]
		}
	]
}

{
	"type" : "disconnect",
	"data" : {
		"msg" : "brb food"
	}
}

{
	"type" : "listClients"
}

//==========
//host only client to server commands
//==========
//maybe these can be made into array formats for consistency with other protocols

{
	"type" : "changeHost",
	"data" : {
		"user" : 2,
		"msg" : "he paid me $5 to make him host"
	}
}

{
	"type" : "announcement",
	"data" : {
		"msg" : "this is important"
	}
}

{
	"type" : "changeServerInfo",
	"data" : {
		"name" : "coolville 2",
		"password" : "542512"
	}
}

{
	"type" : "kickUser",
	"data" : {
		"user" : 1,
		"msg" : "stop scribbling everywhere"
	}
}

{
	"type" : "clearBoard"
}

//this will add a set of pieces and private zones to the existing board state
//host can clear the board first if desired
{
	"type" : "loadBoardState",
	"data" : {
		"privateZones" : [
			{
				"pos" : [
					5.426,
					-7.234
				],
				"size" : [
					2,
					5
				],
				"r" : 0,
				"color" : [
					255,
					0,
					0
				]
			}
		],
		"pieces" : [
			{
				"name" : "somepiece",
				"pos" : [
					5.734,
					3.64
				],
				"id" : 5,
				"icon" : "static/img/crown.png",
				"color" : [
					255,
					0,
					0
				],
				"static" : 0
			}
		]
	}
}



